{"version":3,"file":"clickable-box.js","sources":["../src/index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ClickableBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onKeyPress = this.onKeyPress.bind(this);\n  }\n\n  onKeyPress(event) {\n    const { onClick, onKeyPress } = this.props;\n\n    switch (event.key) {\n      case \" \":\n      case \"Spacebar\": // Support FF <= 37, IE 9-11.\n        // Prevent scrolling when pressing `Spacebar`.\n        event.preventDefault();\n\n        // If space is pressed and both `onKeyPress` and `onClick` exist, only\n        // run `onKeyPress`.\n        if (onClick && onKeyPress) {\n          onKeyPress(event);\n        } else if (onKeyPress) {\n          onKeyPress(event);\n        } else if (onClick) {\n          onClick(event);\n        }\n        break;\n      case \"Enter\":\n        // `onKeyPress` should run first.\n        if (onKeyPress) {\n          onKeyPress(event);\n\n          // Prevent `onClick` from running in the rare case that the user has\n          // a custom `onKeyPress` that contains `event.preventDefault()`.\n          if (event.isDefaultPrevented()) {\n            return;\n          }\n        }\n        if (onClick) onClick(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      is: Component,\n      innerRef,\n      onClick,\n      disabled,\n      tabIndex,\n      // Prevent `onKeyPress` from being spread since we will call it in\n      // `this.onKeyPress` and we don't want the user function to overwrite our\n      // behavior.\n      onKeyPress,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Component\n        // Don't set `tabIndex` if `disabled`. We do set it though even if\n        // `onClick` is not provided so that it mimics the behavior of a native\n        // `button`. We also prevent the user from passing in their own\n        // `tabIndex` in the case that it is disabled. This is better than a\n        // `-1` because `-1` will make the element focusable but not reachable\n        // via keyboard navigation.\n        tabIndex={!disabled ? tabIndex : undefined}\n        // Always have `role=\"button\"`, even if it is disabled. Combined with\n        // `aria-disabled`, screen readers will announce this the same as\n        // a native `button` element.\n        role=\"button\"\n        // Only fire these events if the `disabled` prop is not true.\n        onKeyPress={!disabled ? this.onKeyPress : undefined}\n        onClick={!disabled ? onClick : undefined}\n        // Announce to screen readers that the `ClickableBox` is disabled.\n        aria-disabled={disabled ? \"true\" : undefined}\n        ref={innerRef}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nClickableBox.propTypes = {\n  onClick: PropTypes.func,\n  is: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  tabIndex: PropTypes.number,\n  disabled: PropTypes.bool,\n  onKeyPress: PropTypes.func,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object\n  ])\n};\n\nClickableBox.defaultProps = {\n  onClick: undefined,\n  is: \"span\",\n  tabIndex: 0,\n  disabled: false,\n  onKeyPress: undefined,\n  innerRef: undefined\n};\n\nfunction forwardRef(props, ref) {\n  return <ClickableBox innerRef={ref} {...props} />;\n}\n\nforwardRef.displayName = \"ClickableBox\";\n\nexport default React.forwardRef(forwardRef);\n"],"names":["ClickableBox","props","onKeyPress","_this","bind","React","Component","event","this","onClick","key","preventDefault","isDefaultPrevented","is","innerRef","disabled","tabIndex","undefined","role","ref","otherProps","forwardRef","propTypes","PropTypes","func","oneOfType","string","number","bool","object","defaultProps","displayName"],"mappings":"sqBAGMA,yBACQC,2IACJA,yDAEDC,WAAaC,EAAKD,WAAWE,+PAJXC,EAAMC,gDAOpBC,SACuBC,KAAKP,MAA7BQ,IAAAA,QAASP,IAAAA,kBAETK,EAAMG,SACP,QACA,WAEHH,EAAMI,iBAIFF,GAAWP,EACbA,EAAWK,GACFL,EACTA,EAAWK,GACFE,GACTA,EAAQF,aAGP,WAECL,IACFA,EAAWK,GAIPA,EAAMK,6BAIRH,GAASA,EAAQF,2CAmBrBC,KAAKP,MAVHK,IAAJO,GACAC,IAAAA,SACAL,IAAAA,QACAM,IAAAA,SACAC,IAAAA,SAIAd,0bAKAG,gBAACC,KAOCU,SAAWD,OAAsBE,EAAXD,EAItBE,KAAK,SAELhB,WAAaa,OAA6BE,EAAlBT,KAAKN,WAC7BO,QAAUM,OAAqBE,EAAVR,kBAENM,EAAW,YAASE,EACnCE,IAAKL,GACDM,kMA4BZ,SAASC,EAAWpB,EAAOkB,UAClBd,gBAACL,KAAac,SAAUK,GAASlB,IAvB1CD,EAAasB,UAAY,CACvBb,QAASc,EAAUC,KACnBX,GAAIU,EAAUE,UAAU,CAACF,EAAUC,KAAMD,EAAUG,SACnDV,SAAUO,EAAUI,OACpBZ,SAAUQ,EAAUK,KACpB1B,WAAYqB,EAAUC,KACtBV,SAAUS,EAAUE,UAAU,CAC5BF,EAAUC,KACVD,EAAUG,OACVH,EAAUM,UAId7B,EAAa8B,aAAe,CAC1BrB,aAASQ,EACTJ,GAAI,OACJG,SAAU,EACVD,UAAU,EACVb,gBAAYe,EACZH,cAAUG,GAOZI,EAAWU,YAAc,eAEzB,MAAe1B,EAAMgB,WAAWA"}