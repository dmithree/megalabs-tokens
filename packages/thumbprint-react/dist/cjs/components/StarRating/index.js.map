{"version":3,"file":"index.js","sources":["../../../../components/StarRating/index.tsx"],"sourcesContent":["import React from 'react';\nimport clamp from 'lodash/clamp';\nimport isNumber from 'lodash/isNumber';\nimport times from 'lodash/times';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport * as tokens from '@thumbtack/thumbprint-tokens';\nimport styles from './index.module.scss';\n\n// Total number of stars\nconst MAX_NUM_STARS = 5;\n\n// Smallest increment we render\nconst PRECISION = 0.5;\n\nconst StarIcon = (p: React.SVGAttributes<SVGElement>): JSX.Element => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" {...p}>\n        <path d=\"M8 0c-.29675 0-.54325.1998361-.62.4733224L5.8065 5.333235H.64c-.35675 0-.64.3104371-.64.670142 0 .2199454.11.4165137.27675.533399C.38 6.6066557 4.45 9.5800656 4.45 9.5800656s-1.56325 4.8000874-1.5935 4.8767541c-.02325.0698798-.03975.1467978-.03975.2264808 0 .3599563.28975.6500328.6465.6500328.13675 0 .26325-.0432349.37-.1163825L8 12.1832131s4.07325 2.9668743 4.16675 3.0337377c.10625.0731476.23325.1163825.36975.1163825.35675 0 .64675-.2933442.64675-.6500328 0-.079683-.0165-.156601-.04-.2264808-.03-.0766667-1.593-4.8767541-1.593-4.8767541s4.0695-2.9734099 4.173-3.0432896C15.89 6.4198907 16 6.2233224 16 6.0001093c0-.3564372-.27675-.6668743-.6335-.6668743H10.2L8.61975.4733224C8.54325.1998361 8.2965 0 8 0\" />\n    </svg>\n);\n\ninterface PropTypes {\n    /**\n     * Number from 0-5 at increments of 0.5. Numbers between these steps will be rounded.\n     */\n    rating: number;\n    /**\n     * Number from 0-5 at increments of 1. `hoverRating` trumps `rating` with respect to star\n     * highlighting.\n     */\n    hoverRating?: 0 | 1 | 2 | 3 | 4 | 5;\n    /**\n     * The size of the component when rendered\n     */\n    size?: 'small' | 'medium' | 'large';\n    /**\n     * Function that is called when a user clicks on a star. The function is supplied a single\n     * parameter?: the index of the clicked star.\n     */\n    onStarClick?: (index: number) => void;\n    /**\n     * Function that is called when a user hovers over a star. The function is supplied a single\n     * parameter?: the index of the hovered star.\n     */\n    onStarHover?: (index: number) => void;\n    /**\n     * Function that is called when a user mouses away from the `StarRating` component\n     */\n    onMouseLeave?: () => void;\n}\n\nexport default function StarRating({\n    rating,\n    hoverRating = 0,\n    size = 'small',\n    onStarClick = noop,\n    onStarHover = noop,\n    onMouseLeave = noop,\n}: PropTypes): JSX.Element {\n    const clampedRating = clamp(rating, 0, MAX_NUM_STARS);\n    const roundedRating = Math.round(clampedRating / PRECISION) * PRECISION;\n    const ratio = (hoverRating || roundedRating) / MAX_NUM_STARS;\n\n    // Only add title text if the stars are not clickable. Otherwise, it is confusing because the\n    // title text will not match the index of the star that is being hovered on.\n    // https://github.com/thumbtack/thumbprint-archive/issues/894\n    const titleText =\n        onStarClick !== noop ? undefined : `${roundedRating} out of ${MAX_NUM_STARS} star rating`;\n\n    return (\n        <div\n            className={classNames({\n                [styles.root]: true,\n                [styles.rootSizeSmall]: size === 'small',\n                [styles.rootSizeMedium]: size === 'medium',\n                [styles.rootSizeLarge]: size === 'large',\n                [styles.rootIsClickable]: onStarClick !== noop,\n            })}\n            title={titleText}\n        >\n            {/*\n                Putting these first because it's positioned as absolute so that it's\n                presence isn't counted\n            */}\n            <div\n                className={`${styles.row} ${styles.rowGold}`}\n                data-test-id=\"star-row-gold\"\n                onMouseLeave={onMouseLeave}\n                style={{ width: isNumber(ratio) ? `${ratio * 100}%` : undefined }}\n            >\n                {times(MAX_NUM_STARS, index => (\n                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n                    <div\n                        key={index}\n                        className={classNames({\n                            [styles.starContainerSmall]: size === 'small',\n                            [styles.starContainerMedium]: size === 'medium',\n                            [styles.starContainerLarge]: size === 'large',\n                        })}\n                        onClick={(): void => onStarClick(index + 1)}\n                        onMouseEnter={(): void => onStarHover(index + 1)}\n                    >\n                        <StarIcon\n                            fill={tokens.tpColorYellow}\n                            className={classNames({\n                                [styles.starSVG]: true,\n                                [styles.starSVGSizeSmall]: size === 'small',\n                                [styles.starSVGSizeMedium]: size === 'medium',\n                                [styles.starSVGSizeLarge]: size === 'large',\n                            })}\n                        />\n                    </div>\n                ))}\n            </div>\n\n            <div className={styles.row} data-test-id=\"star-row-gray\" onMouseLeave={onMouseLeave}>\n                {times(MAX_NUM_STARS, index => (\n                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n                    <div\n                        key={index}\n                        className={classNames({\n                            [styles.starContainerSmall]: size === 'small',\n                            [styles.starContainerMedium]: size === 'medium',\n                            [styles.starContainerLarge]: size === 'large',\n                        })}\n                        onClick={(): void => onStarClick(index + 1)}\n                        onMouseEnter={(): void => {\n                            onStarHover(index + 1);\n                        }}\n                    >\n                        <StarIcon\n                            fill={tokens.tpColorGray}\n                            className={classNames({\n                                [styles.starSVG]: true,\n                                [styles.starSVGSizeSmall]: size === 'small',\n                                [styles.starSVGSizeMedium]: size === 'medium',\n                                [styles.starSVGSizeLarge]: size === 'large',\n                            })}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"names":["MAX_NUM_STARS","PRECISION","StarIcon","p","React","StarRating","rating","hoverRating","size","onStarClick","noop","onStarHover","onMouseLeave","clampedRating","clamp","roundedRating","Math","round","ratio","titleText","undefined","classNames","styles","root","rootSizeSmall","rootSizeMedium","rootSizeLarge","rootIsClickable","row","rowGold","width","isNumber","times","index","starContainerSmall","starContainerMedium","starContainerLarge","tokens","starSVG","starSVGSizeSmall","starSVGSizeMedium","starSVGSizeLarge"],"mappings":"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"}