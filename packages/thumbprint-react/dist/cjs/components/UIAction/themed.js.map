{"version":3,"file":"themed.js","sources":["../../../../components/UIAction/themed.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport classNames from 'classnames';\nimport LoaderDots from '../LoaderDots/index';\nimport { InputRowContext } from '../InputRow/index.jsx';\nimport getAnchorProps from './get-anchor-props';\nimport getButtonProps from './get-button-props';\nimport styles from './themed.module.scss';\n\nenum loaderDotsTheme {\n    primary = 'inverse',\n    secondary = 'brand',\n    tertiary = 'muted',\n}\n\nconst withIcon = (\n    children: React.ReactNode,\n    { icon }: { icon?: React.ReactNode },\n): React.ReactNode => {\n    if (!icon) {\n        return children;\n    }\n\n    return (\n        <span className={styles.flexCenter}>\n            <span\n                className={classNames({\n                    [styles.iconContainer]: true,\n                    [styles.iconContainerHasChildren]: children,\n                })}\n            >\n                {icon}\n            </span>\n            {children}\n        </span>\n    );\n};\n\nconst withLoader = (\n    children: React.ReactNode,\n    {\n        isLoading,\n        theme = 'primary',\n    }: { isLoading?: boolean; theme?: 'primary' | 'secondary' | 'tertiary' },\n): React.ReactNode => {\n    if (!isLoading) {\n        return children;\n    }\n\n    return (\n        <span className={styles.loaderContainer}>\n            <span className={styles.absoluteCenter}>\n                <LoaderDots theme={loaderDotsTheme[theme]} size=\"small\" />\n            </span>\n            <span className={styles.hidden}>{children}</span>\n        </span>\n    );\n};\n\nconst withFlexWrapper = (\n    children: React.ReactNode,\n    { size }: { size?: 'small' | 'large' },\n): React.ReactNode => (\n    <span\n        className={classNames({\n            [styles.flexWrapper]: true,\n            [styles.flexWrapperSizeSmall]: size === 'small',\n            [styles.flexWrapperSizeLarge]: size === 'large',\n        })}\n    >\n        {children}\n    </span>\n);\n\nconst Themed = React.forwardRef<HTMLButtonElement | HTMLAnchorElement, PropTypes>(\n    (\n        {\n            children,\n            isDisabled = false,\n            isLoading = false,\n            icon,\n            type = 'button',\n            to,\n            shouldOpenInNewTab = false,\n            onClick,\n            onMouseEnter,\n            onMouseOver,\n            onFocus,\n            onMouseLeave,\n            onBlur,\n            accessibilityLabel,\n            size = 'large',\n            theme = 'primary',\n            width = 'auto',\n            dataTest,\n        }: PropTypes,\n        ref,\n    ): JSX.Element => {\n        warning(\n            children || accessibilityLabel || (icon && children),\n            'The prop `accessibilityLabel` must be provided to the button or link when `icon` is provided but `children` is not. This helps users on screen readers navigate our content.',\n        );\n\n        return (\n            <InputRowContext.Consumer>\n                {({ isWithinInputRow, isFirstInputRowChild, isLastInputRowChild }): JSX.Element => {\n                    const isAnchor = !!to;\n                    const anchorProps = getAnchorProps({\n                        isDisabled,\n                        shouldOpenInNewTab,\n                        to,\n                        onClick,\n                    });\n                    const buttonProps = getButtonProps({\n                        onClick,\n                        type,\n                        onMouseEnter,\n                        onMouseOver,\n                        onFocus,\n                        onMouseLeave,\n                        onBlur,\n                    });\n\n                    const className = classNames({\n                        [styles.themedButton]: true,\n                        [styles.themedButtonRoundedBordersLeft]:\n                            isFirstInputRowChild || !isWithinInputRow,\n                        [styles.themedButtonRoundedBordersRight]:\n                            isLastInputRowChild || !isWithinInputRow,\n                        [styles.themedButtonHasNoRightBorder]:\n                            isWithinInputRow && !isLastInputRowChild,\n                        [styles.themedButtonThemePrimary]: theme === 'primary',\n                        [styles.themedButtonThemeTertiary]: theme === 'tertiary',\n                        [styles.themedButtonThemeSecondary]: theme === 'secondary',\n                        [styles.themedButtonThemeCaution]: theme === 'caution',\n                        [styles.themedButtonThemeSolid]: theme === 'solid',\n                        [styles.themedButtonThemePopoverPrimary]: theme === 'popover-primary',\n                        [styles.themedButtonThemePopoverSecondary]: theme === 'popover-secondary',\n                        [styles.themedButtonWidthAuto]: width === 'auto' && !isWithinInputRow,\n                        [styles.themedButtonWidthFull]: width === 'full' || isWithinInputRow,\n                        [styles.themedButtonWidthFullBelowSmall]:\n                            width === 'full-below-small' && !isWithinInputRow,\n                    });\n\n                    const commonProps = {\n                        disabled: isLoading || isDisabled,\n                        className,\n                        'aria-label': accessibilityLabel,\n                        'data-test': dataTest,\n                    };\n\n                    // There are more themes here than are valid for use with `LoaderDots`, so restrict the type\n                    // by overwriting any invalid themes as `undefined`.\n                    const restrictedTheme =\n                        theme === 'primary' || theme === 'secondary' || theme === 'tertiary'\n                            ? theme\n                            : undefined;\n\n                    const newChildren = withFlexWrapper(\n                        withLoader(withIcon(children, { icon }), {\n                            isLoading,\n                            theme: restrictedTheme,\n                        }),\n                        { size },\n                    );\n\n                    if (isAnchor) {\n                        return (\n                            <a\n                                {...commonProps}\n                                {...anchorProps}\n                                ref={ref as React.Ref<HTMLAnchorElement>}\n                            >\n                                {newChildren}\n                            </a>\n                        );\n                    }\n\n                    return (\n                        // Disable this rule, even though `buttonProps.type` can never be undefined,\n                        // because the rule itself is broken and shows a false positive.\n                        // https://github.com/yannickcr/eslint-plugin-react/issues/1555\n                        // eslint-disable-next-line react/button-has-type\n                        <button\n                            {...commonProps}\n                            {...buttonProps}\n                            ref={ref as React.Ref<HTMLButtonElement>}\n                        >\n                            {newChildren}\n                        </button>\n                    );\n                }}\n            </InputRowContext.Consumer>\n        );\n    },\n);\n\ninterface PropTypes {\n    /**\n     * Contents displayed within the button.\n     */\n    children?: React.ReactNode;\n    /**\n     * Boolean determining whether the button is disabled. When `true` it will appear visually\n     * \"greyed out\" and not respond to interaction.\n     */\n    isDisabled?: boolean;\n    /**\n     * Boolean determining whether the button is in a loading state. When `true` the text will\n     * we replaced with a loading animation and interaction will be disabled.\n     */\n    isLoading?: boolean;\n    /**\n     * Icon from [Thumbprint Icons](/icons/) to render within the button.\n     */\n    icon?: React.ReactNode;\n    /**\n     * Button's on type `submit` will submit a form when used within a `form`\n     * element.\n     */\n    type?: 'button' | 'submit';\n    /**\n     * Page to navigate to when the anchor is clicked.\n     */\n    to?: string;\n    /**\n     * Opens the URL in a new tab when clicked.\n     */\n    shouldOpenInNewTab?: boolean;\n    /**\n     * Function that will run when the button is clicked on.\n     */\n    onClick?: (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement, MouseEvent>) => void;\n    /**\n     * Function that runs when the user hovers on the button.\n     */\n    onMouseEnter?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    /**\n     * Function that runs when the user hovers on the button. Unlike `onMouseEnter`, `onMouseOver`\n     * fires each time a child element receives focus.\n     */\n    onMouseOver?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    /**\n     * Function that runs when the user hovers away from the button.\n     */\n    onMouseLeave?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    /**\n     * Function that runs when the button receives focus.\n     */\n    onFocus?: (event: React.FocusEvent<HTMLButtonElement>) => void;\n    /**\n     * Function that runs when the button loses focus.\n     */\n    onBlur?: (event: React.FocusEvent<HTMLButtonElement>) => void;\n    /**\n     * Description of the buttonâ€™s content. It is required if the button has an icon and no\n     * descriptive text.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Controls the button's background, text, and border color.\n     */\n    theme?:\n        | 'primary'\n        | 'secondary'\n        | 'tertiary'\n        | 'caution'\n        | 'solid'\n        | 'popover-primary'\n        | 'popover-secondary';\n    /**\n     * Changes the button's `line-height`, `padding`, `border-radius`, and `font-size`.\n     */\n    size?: 'small' | 'large';\n    /**\n     * `Button` components are as wide as the content that is passed in. The `full` option will\n     * expand the width to `100%` on all screens. `full-below-small` will expand the width to 100%\n     * on devices smaller than [our `small` breakpoint](/tokens/#section-breakpoint).\n     */\n    width?: 'auto' | 'full' | 'full-below-small';\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     */\n    dataTest?: string;\n}\n\nexport default Themed;\n"],"names":["loaderDotsTheme","withIcon","children","icon","React","styles","flexCenter","classNames","iconContainer","iconContainerHasChildren","withLoader","isLoading","theme","loaderContainer","absoluteCenter","LoaderDots","hidden","withFlexWrapper","size","flexWrapper","flexWrapperSizeSmall","flexWrapperSizeLarge","Themed","forwardRef","ref","isDisabled","type","to","shouldOpenInNewTab","onClick","onMouseEnter","onMouseOver","onFocus","onMouseLeave","onBlur","accessibilityLabel","width","dataTest","warning","InputRowContext","isWithinInputRow","isFirstInputRowChild","isLastInputRowChild","isAnchor","anchorProps","getAnchorProps","buttonProps","getButtonProps","className","themedButton","themedButtonRoundedBordersLeft","themedButtonRoundedBordersRight","themedButtonHasNoRightBorder","themedButtonThemePrimary","themedButtonThemeTertiary","themedButtonThemeSecondary","themedButtonThemeCaution","themedButtonThemeSolid","themedButtonThemePopoverPrimary","themedButtonThemePopoverSecondary","themedButtonWidthAuto","themedButtonWidthFull","themedButtonWidthFullBelowSmall","commonProps","disabled","restrictedTheme","undefined","newChildren"],"mappings":"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"}