{"version":3,"file":"index.js","sources":["../../../../components/ModalCurtain/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport NoScroll from './components/no-scroll.jsx';\n\nimport useCloseOnEscape from '../../utils/use-close-on-escape';\nimport useFocusTrap from '../../utils/use-focus-trap';\nimport ConditionalPortal from '../../utils/ConditionalPortal';\n\nimport styles from './index.module.scss';\n\nconst propTypes = {\n    /**\n     * Content that appears on top of the curtain. `children` is a [render\n     * prop](https://reactjs.org/docs/render-props.html) and expects a function. The function\n     * provided receives an object two properties:\n     *\n     * * `curtainClassName`: Handles positioning, z-index, opacity, overflow, and visibility.\n     * Should be added to the `className` of the outermost element within the `children`.\n     * * `curtainOnClick`: You can optionally add this prop to the `onClick` of an element within\n     * `children`. This is typically used on to close a ModalCurtain when clicking on a dark\n     * backdrop.\n     *\n     * The examples on this page include code samples that demonstrate real use of these props.\n     */\n    children: PropTypes.func,\n    /**\n     * The four states that a modal can be in.\n     *\n     * * `exited` – Modal is fully closed\n     * * `entering` – Modal is opening\n     * * `entered` – Modal has fully open\n     * * `exiting` – Modal is closing\n     *\n     * Modals that do not have transitions will only use the `entered` and `exited` stages.\n     */\n    stage: PropTypes.oneOf(['entering', 'entered', 'exiting', 'exited']),\n    /**\n     * Accessibility title used to describe the content of the modal to screen readers.\n     */\n    accessibilityLabel: PropTypes.string,\n    /**\n     * Function that fires to close the modal.\n     */\n    onCloseClick: PropTypes.func.isRequired,\n    /**\n     * Determines if the modal should close when pressing the escape key.\n     */\n    shouldCloseOnEscape: PropTypes.bool,\n};\n\nconst defaultProps = {\n    children: undefined,\n    accessibilityLabel: 'Modal',\n    stage: 'exited',\n    shouldCloseOnEscape: true,\n};\n\nexport default function ModalCurtain({\n    stage,\n    shouldCloseOnEscape,\n    accessibilityLabel,\n    onCloseClick,\n    children,\n}) {\n    const [isClient, setIsClient] = useState(false);\n    const [wrapperEl, setWrapperEl] = useState(null);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    const isEnteringOrEntered = stage === 'entering' || stage === 'entered';\n    const shouldBindEscListener = isClient && shouldCloseOnEscape && isEnteringOrEntered;\n    const shouldTrapFocus = isClient && wrapperEl && stage === 'entered';\n    const shouldDisableScrolling = isEnteringOrEntered;\n\n    useCloseOnEscape(onCloseClick, shouldBindEscListener);\n    useFocusTrap(wrapperEl, shouldTrapFocus);\n\n    return (\n        <ConditionalPortal shouldDisplace>\n            {/* Use tabIndex=\"-1\" to allow programmatic focus (as initialFocus node for focus-trap)\n            but not be tabbable by user. */}\n            <div\n                role=\"dialog\"\n                aria-label={accessibilityLabel}\n                tabIndex=\"-1\"\n                ref={element => {\n                    setWrapperEl(element);\n                }}\n            >\n                {shouldDisableScrolling && <NoScroll />}\n\n                {/* This component uses the render prop pattern. `children` expects a function and\n                receives an object that contains `curtainOnClick` and `curtainClassName`.\n                While using those two properties is optional, they provide helpful functionality. */}\n                {children &&\n                    children({\n                        curtainOnClick: event => {\n                            // Ensures that the click event happened on the element that has the\n                            // `onClick`. This prevents clicks deep within `children` from bubbling\n                            // up and closing the ModalCurtain.\n                            if (event.target === event.currentTarget) {\n                                onCloseClick();\n                            }\n                        },\n                        curtainClassName: classNames({\n                            [styles.root]: true,\n                            [styles.rootOpen]: isEnteringOrEntered,\n                        }),\n                    })}\n            </div>\n        </ConditionalPortal>\n    );\n}\n\nModalCurtain.propTypes = propTypes;\nModalCurtain.defaultProps = defaultProps;\n"],"names":["propTypes","children","PropTypes","func","stage","oneOf","accessibilityLabel","string","onCloseClick","isRequired","shouldCloseOnEscape","bool","defaultProps","undefined","ModalCurtain","useState","isClient","setIsClient","wrapperEl","setWrapperEl","useEffect","isEnteringOrEntered","shouldBindEscListener","shouldTrapFocus","shouldDisableScrolling","useCloseOnEscape","useFocusTrap","element","curtainOnClick","event","target","currentTarget","curtainClassName","classNames","styles","root","rootOpen"],"mappings":";;;;;;;;;;AAYA,IAAMA,SAAS,GAAG;;;;;;;;;;;;;;EAcdC,QAAQ,EAAEC,SAAS,CAACC,IAdN;;;;;;;;;;;;EAyBdC,KAAK,EAAEF,SAAS,CAACG,KAAV,CAAgB,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,EAAmC,QAAnC,CAAhB,CAzBO;;;;;EA6BdC,kBAAkB,EAAEJ,SAAS,CAACK,MA7BhB;;;;;EAiCdC,YAAY,EAAEN,SAAS,CAACC,IAAV,CAAeM,UAjCf;;;;;EAqCdC,mBAAmB,EAAER,SAAS,CAACS;CArCnC;AAwCA,IAAMC,YAAY,GAAG;EACjBX,QAAQ,EAAEY,SADO;EAEjBP,kBAAkB,EAAE,OAFH;EAGjBF,KAAK,EAAE,QAHU;EAIjBM,mBAAmB,EAAE;CAJzB;AAOA,AAAe,SAASI,YAAT,OAMZ;;;MALCV,KAKD,QALCA,KAKD;MAJCM,mBAID,QAJCA,mBAID;MAHCJ,kBAGD,QAHCA,kBAGD;MAFCE,YAED,QAFCA,YAED;MADCP,QACD,QADCA,QACD;;kBACiCc,QAAQ,CAAC,KAAD,CADzC;;MACQC,QADR;MACkBC,WADlB;;mBAEmCF,QAAQ,CAAC,IAAD,CAF3C;;MAEQG,SAFR;MAEmBC,YAFnB;;EAICC,SAAS,CAAC,YAAM;IACZH,WAAW,CAAC,IAAD,CAAX;GADK,EAEN,EAFM,CAAT;MAIMI,mBAAmB,GAAGjB,KAAK,KAAK,UAAV,IAAwBA,KAAK,KAAK,SAA9D;MACMkB,qBAAqB,GAAGN,QAAQ,IAAIN,mBAAZ,IAAmCW,mBAAjE;MACME,eAAe,GAAGP,QAAQ,IAAIE,SAAZ,IAAyBd,KAAK,KAAK,SAA3D;MACMoB,sBAAsB,GAAGH,mBAA/B;EAEAI,gBAAgB,CAACjB,YAAD,EAAec,qBAAf,CAAhB;EACAI,YAAY,CAACR,SAAD,EAAYK,eAAZ,CAAZ;SAGI,oBAAC,iBAAD;IAAmB,cAAc;KAG7B;IACI,IAAI,EAAC,QADT;kBAEgBjB,kBAFhB;IAGI,QAAQ,EAAC,IAHb;IAII,GAAG,EAAE,aAAAqB,OAAO,EAAI;MACZR,YAAY,CAACQ,OAAD,CAAZ;;KAGHH,sBAAsB,IAAI,oBAAC,QAAD,OAR/B,EAaKvB,QAAQ,IACLA,QAAQ,CAAC;IACL2B,cAAc,EAAE,wBAAAC,KAAK,EAAI;;;;UAIjBA,KAAK,CAACC,MAAN,KAAiBD,KAAK,CAACE,aAA3B,EAA0C;QACtCvB,YAAY;;KANf;IASLwB,gBAAgB,EAAEC,UAAU,iDACvBC,MAAM,CAACC,IADgB,EACT,IADS,gCAEvBD,MAAM,CAACE,QAFgB,EAELf,mBAFK;GATxB,CAdhB,CAHJ,CADJ;;AAqCJP,YAAY,CAACd,SAAb,GAAyBA,SAAzB;AACAc,YAAY,CAACF,YAAb,GAA4BA,YAA5B;;;;"}