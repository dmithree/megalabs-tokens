{"version":3,"file":"index.js","sources":["../../../../components/ModalDefault/index.jsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { NavigationCloseSmall } from '../../icons/index.jsx';\nimport { TextButton } from '../Button/index';\nimport StickyFooter from './components/sticky-footer.jsx';\nimport Transition from './components/transition.jsx';\nimport ModalCurtain from '../ModalCurtain/index.jsx';\nimport styles from './index.module.scss';\n\nconst { Provider, Consumer } = React.createContext({\n    stickyFooterContainerRef: null,\n    setSticky: noop,\n});\n\n// These values are duplicated in the Sass.\nconst TRANSITION_OPEN_SPEED = 300;\nconst TRANSITION_CLOSE_SPEED = 250;\n\n/**\n * `ModalDefaultAnimatedWrapper` is an exported component that we export for developers that want access to\n * `ModalDefault` without padding and a close button. We export it as a named export instead of\n * creating a `hasNoPadding` prop partly to discourage the use of `ModalDefault` without padding.\n *\n * This component uses `ModalCurtain` and includes the backdrop, transition, and white modal\n * wrapper that is available at a few widths.\n */\nconst ModalDefaultAnimatedWrapper = ({\n    children,\n    isOpen,\n    onCloseClick,\n    onCloseFinish,\n    onOpenFinish,\n    shouldCloseOnCurtainClick,\n    width,\n    heightAboveSmall,\n    shouldPageScrollAboveSmall,\n}) => (\n    <Transition\n        in={isOpen}\n        timeout={{\n            enter: TRANSITION_OPEN_SPEED,\n            exit: TRANSITION_CLOSE_SPEED,\n        }}\n        onEntered={onOpenFinish}\n        onExited={onCloseFinish}\n    >\n        {transitionStage => (\n            <ModalCurtain stage={transitionStage} onCloseClick={onCloseClick}>\n                {({ curtainClassName, curtainOnClick }) => (\n                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n                    <div\n                        className={classNames({\n                            [curtainClassName]: true,\n                            [styles.curtain]: true,\n                            [styles.curtainOpen]: isOpen,\n                        })}\n                    >\n                        {/*\n                            Extra nested <div> to prevent curtain's\n                            bottom padding from being ignored in Firefox and Edge\n                            (See #376 and https://github.com/w3c/csswg-drafts/issues/129)\n\n                            onClick listener is attached to this innermost node\n                            that constitutes curtain\n                        */}\n                        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n                        <div\n                            className={classNames({\n                                [styles.curtainInner]: true,\n                                [styles.curtainInnerShouldPageScrollAboveSmall]: shouldPageScrollAboveSmall,\n                            })}\n                            onClick={shouldCloseOnCurtainClick ? curtainOnClick : undefined}\n                            data-test=\"thumbprint-modal-curtain\"\n                        >\n                            <div\n                                className={classNames({\n                                    [styles.wrapper]: true,\n                                    [styles.wrapperOpen]: isOpen,\n                                    [styles.wrapperWide]: width === 'wide',\n                                    [styles.wrapperNarrow]: width === 'narrow',\n                                    [styles.wrapperMedium]: width === 'medium',\n                                    [styles.wrapperHeightMedium]: heightAboveSmall === 'medium',\n                                    [styles.wrapperHeightTall]: heightAboveSmall === 'tall',\n                                    [styles.wrapperShouldPageScrollAboveSmall]: shouldPageScrollAboveSmall,\n                                })}\n                                data-test=\"thumbprint-modal-wrapper\"\n                            >\n                                <div\n                                    className={classNames({\n                                        [styles.container]: true,\n                                    })}\n                                    data-test=\"thumbprint-modal-container\"\n                                >\n                                    {children}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </ModalCurtain>\n        )}\n    </Transition>\n);\n\nModalDefaultAnimatedWrapper.propTypes = {\n    /**\n     * Content that appears within the modal.\n     */\n    children: PropTypes.node,\n    /**\n     * Function that fires to close the modal.\n     */\n    onCloseClick: PropTypes.func.isRequired,\n    /**\n     * Function that fires once the modal has opened and transitions have ended.\n     */\n    onOpenFinish: PropTypes.func,\n    /**\n     * Function that fires once the modal has closed and transitions have ended.\n     */\n    onCloseFinish: PropTypes.func,\n    /**\n     * Determines if the modal should close when clicking on the curtain, outside of the `children`.\n     */\n    shouldCloseOnCurtainClick: PropTypes.bool,\n    /**\n     * Allows the page to scroll vertically at viewports larger than the small breakpoint. If\n     * `false`, the modal will always be equal to or smaller than the viewport and the contents\n     * of the modal will scroll, not the page itself.\n     */\n    shouldPageScrollAboveSmall: PropTypes.bool,\n    /**\n     * Should the modal appear open.\n     */\n    isOpen: PropTypes.bool,\n    /**\n     * Sets the max-width of the modal container.\n     */\n    width: PropTypes.oneOf(['narrow', 'medium', 'wide']),\n    /**\n     * Sets height of the modal container above small viewport.\n     * If `auto` (default), the modal height will be determined by its content.\n     * Otherwise, the modal height will be fixed at some constant px.\n     */\n    heightAboveSmall: PropTypes.oneOf(['auto', 'medium', 'tall']),\n};\n\nModalDefaultAnimatedWrapper.defaultProps = {\n    children: undefined,\n    onOpenFinish: undefined,\n    onCloseFinish: undefined,\n    isOpen: false,\n    shouldCloseOnCurtainClick: true,\n    shouldPageScrollAboveSmall: true,\n    width: 'medium',\n    heightAboveSmall: 'auto',\n};\n\nconst modalHeaderPropTypes = {\n    /**\n     * Content (usually a `ModalDefaultTitle` and `ModalDefaultDescription`) that appears at the top of the\n     * modal.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nconst modalTitlePropTypes = {\n    /**\n     * Text that describes the modal contents. It is intended for use within the `ModalDefaultHeader`.\n     */\n    children: PropTypes.string.isRequired,\n};\n\nconst modalDescriptionPropTypes = {\n    /**\n     * Text intended for use below a `ModalDefaultTitle` and within a `ModalDefaultHeader`.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nconst modalContentPropTypes = {\n    /**\n     * Content (usually a form) that makes up the main part of the modal.\n     */\n    children: PropTypes.node.isRequired,\n};\n\nconst modalContentFullBleedPropTypes = {\n    /**\n     * Content (usually a form) that makes up the main part of the modal.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * Allows the React `className` prop to be passed through to the rendered element.\n     */\n    className: PropTypes.string,\n    /**\n     * Allows the React `style` prop to be passed through to the rendered element.\n     */\n    style: PropTypes.shape(),\n};\n\nconst modalContentFullBleedDefaultProps = {\n    className: '',\n    style: {},\n};\n\nconst modalFooterPropTypes = {\n    /**\n     * Content (ususally buttons) to render within the footer.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * Attaches the footer to the bottom of the modal below the small breakpoint.\n     */\n    isSticky: PropTypes.bool,\n};\n\nconst modalFooterDefaultProps = {\n    isSticky: false,\n};\n\nconst modalDefaultPropTypes = {\n    /**\n     * Content that appears within the modal.\n     */\n    children: PropTypes.node,\n    /**\n     * Function that fires to close the modal.\n     */\n    onCloseClick: PropTypes.func.isRequired,\n    /**\n     * Function that fires once the modal has opened and transitions have ended.\n     */\n    onOpenFinish: PropTypes.func,\n    /**\n     * Function that fires once the modal has closed and transitions have ended.\n     */\n    onCloseFinish: PropTypes.func,\n    /**\n     * Determines if the close button should be rendered. This is generally discouraged and should\n     * be used carefully. If used, the contents passed into the modal must contain a focusable\n     * element such as a link or button.\n     */\n    shouldHideCloseButton: PropTypes.bool,\n    /**\n     * Determines if the modal should close when clicking on the curtain, outside of the `children`.\n     */\n    shouldCloseOnCurtainClick: PropTypes.bool,\n    /**\n     * Should the modal appear open.\n     */\n    isOpen: PropTypes.bool,\n    /**\n     * Sets the max-width of the modal container.\n     */\n    width: PropTypes.oneOf(['narrow', 'medium', 'wide']),\n    /**\n     * Sets height of the modal container above small viewport.\n     * If `auto` (default), the modal height will be determined by its content.\n     * Otherwise, the modal height will be fixed at some constant px.\n     */\n    heightAboveSmall: PropTypes.oneOf(['auto', 'medium', 'tall']),\n};\n\nconst modalDefaultDefaultProps = {\n    children: undefined,\n    onOpenFinish: undefined,\n    onCloseFinish: undefined,\n    isOpen: false,\n    shouldHideCloseButton: false,\n    shouldCloseOnCurtainClick: true,\n    width: 'medium',\n    heightAboveSmall: 'auto',\n};\n\nconst ModalDefaultHeader = ({ children }) => <div className={styles.modalHeader}>{children}</div>;\n\nModalDefaultHeader.propTypes = modalHeaderPropTypes;\n\nconst ModalDefaultTitle = ({ children }) => <div className={styles.modalTitle}>{children}</div>;\n\nModalDefaultTitle.propTypes = modalTitlePropTypes;\n\nconst ModalDefaultDescription = ({ children }) => (\n    <div className={styles.modalDescription}>{children}</div>\n);\n\nModalDefaultDescription.propTypes = modalDescriptionPropTypes;\n\nconst ModalDefaultContent = ({ children }) => <div className={styles.modalContent}>{children}</div>;\n\nModalDefaultContent.propTypes = modalContentPropTypes;\n\nconst ModalDefaultContentFullBleed = ({ children, className, style }) => (\n    <div className={classNames(className, styles.modalContentFullBleed)} style={style}>\n        {children}\n    </div>\n);\n\nModalDefaultContentFullBleed.propTypes = modalContentFullBleedPropTypes;\nModalDefaultContentFullBleed.defaultProps = modalContentFullBleedDefaultProps;\n\nclass ModalDefaultFooter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isClient: false,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            isClient: true,\n        });\n    }\n\n    render() {\n        const { isClient } = this.state;\n        const { isSticky, children } = this.props;\n\n        if (!isClient) {\n            return null;\n        }\n\n        return (\n            <Consumer>\n                {({ stickyFooterContainerRef, setSticky }) => {\n                    // When `isSticky` is true, the `ModalDefaultFooter` must change it's position in the\n                    // DOM so that it is fixed at the bottom of the modal on small viewports. We\n                    // use React's Context API so that it is a property of the `ModalDefaultFooter`\n                    // component and not the `ModalDefault` API.\n                    //\n                    // `stickyFooterContainerRef` is the DOM element where the sticky footer will\n                    // render. `setSticky` is a function that updates the state in `ModalDefault`,\n                    // changing the CSS to make the contents scroll and the footer fixed at the\n                    // bottom.\n                    if (!isSticky) {\n                        return <div className={styles.modalFooterFluid}>{children}</div>;\n                    }\n\n                    // We have to create a separate component here because `setSticky` updates\n                    // state in `ModalDefault` and state updates are not allowed within `render`.\n                    // Moving it to a separate component allows us to call it within\n                    // `componentDidMount`.\n                    // https://blog.kentcdodds.com/answers-to-common-questions-about-render-props-a9f84bb12d5d#6a05\n                    return ReactDOM.createPortal(\n                        <StickyFooter setSticky={setSticky}>{children}</StickyFooter>,\n                        stickyFooterContainerRef.current,\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nModalDefaultFooter.propTypes = modalFooterPropTypes;\nModalDefaultFooter.defaultProps = modalFooterDefaultProps;\n\nclass ModalDefault extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.stickyFooterContainerRef = React.createRef();\n        this.state = {\n            hasStickyFooter: false,\n        };\n        this.setSticky = this.setSticky.bind(this);\n        this.activeTimeout = null;\n    }\n\n    setSticky(newVal) {\n        const { hasStickyFooter } = this.state;\n\n        if (newVal !== hasStickyFooter) {\n            this.setState({\n                hasStickyFooter: newVal,\n            });\n        }\n    }\n\n    render() {\n        const {\n            children,\n            isOpen,\n            onCloseClick,\n            onCloseFinish,\n            onOpenFinish,\n            shouldCloseOnCurtainClick,\n            shouldHideCloseButton,\n            width,\n            heightAboveSmall,\n        } = this.props;\n\n        const { hasStickyFooter } = this.state;\n\n        return (\n            <ModalDefaultAnimatedWrapper\n                onCloseClick={onCloseClick}\n                onOpenFinish={onOpenFinish}\n                onCloseFinish={onCloseFinish}\n                shouldCloseOnCurtainClick={shouldCloseOnCurtainClick}\n                isOpen={isOpen}\n                width={width}\n                heightAboveSmall={heightAboveSmall}\n                // We allow the modal to grow taller than the page only if\n                // there is no sticky footer. This means that the page can\n                // scroll vertically when the modal contents are tall enough.\n                // If we have a sticky footer, we prevent the modal from\n                // getting taller than the viewport so that the footer can\n                // always appear at the bottom. In this case, the inside\n                // of the modal itself will scroll vertically as needed.\n                shouldPageScrollAboveSmall={!hasStickyFooter}\n            >\n                <Provider\n                    value={{\n                        stickyFooterContainerRef: this.stickyFooterContainerRef,\n                        setSticky: this.setSticky,\n                    }}\n                >\n                    <div className={styles.contents}>\n                        {/*\n                            Extra nested <div> to prevent bottom padding from being ignored\n                            in Firefox and Edge\n                            (See #376 and https://github.com/w3c/csswg-drafts/issues/129)\n                        */}\n                        <div\n                            className={classNames(styles.contentsPadding, {\n                                [styles.contentsPaddingNotSticky]: !hasStickyFooter,\n                            })}\n                        >\n                            {children}\n                        </div>\n                    </div>\n                    {/*\n                        If a user uses `<ModalDefaultFooter isSticky />`, it gets\n                        moved here with React portals.\n                    */}\n                    <div ref={this.stickyFooterContainerRef} />\n                    {/*\n                        The close button is last in the DOM so that it is\n                        not focused first by the focus trap. We visually\n                        position it at the top with flexbox.\n                    */}\n                    <div\n                        className={classNames({\n                            [styles.closeButton]: true,\n                            [styles.closeButtonNotSticky]: !hasStickyFooter,\n                        })}\n                    >\n                        {shouldHideCloseButton === false && (\n                            <TextButton\n                                accessibilityLabel=\"Close modal\"\n                                iconLeft={\n                                    <NavigationCloseSmall className={styles.closeButtonIcon} />\n                                }\n                                onClick={onCloseClick}\n                                theme=\"inherit\"\n                            />\n                        )}\n                    </div>\n                </Provider>\n            </ModalDefaultAnimatedWrapper>\n        );\n    }\n}\n\nModalDefault.propTypes = modalDefaultPropTypes;\nModalDefault.defaultProps = modalDefaultDefaultProps;\n\nexport default ModalDefault;\nexport {\n    ModalDefaultHeader,\n    ModalDefaultTitle,\n    ModalDefaultDescription,\n    ModalDefaultContent,\n    ModalDefaultContentFullBleed,\n    ModalDefaultFooter,\n    ModalDefaultAnimatedWrapper,\n};\n"],"names":["React","createContext","stickyFooterContainerRef","setSticky","noop","Provider","Consumer","TRANSITION_OPEN_SPEED","TRANSITION_CLOSE_SPEED","ModalDefaultAnimatedWrapper","children","isOpen","onCloseClick","onCloseFinish","onOpenFinish","shouldCloseOnCurtainClick","width","heightAboveSmall","shouldPageScrollAboveSmall","enter","exit","transitionStage","curtainClassName","curtainOnClick","classNames","styles","curtain","curtainOpen","curtainInner","curtainInnerShouldPageScrollAboveSmall","undefined","wrapper","wrapperOpen","wrapperWide","wrapperNarrow","wrapperMedium","wrapperHeightMedium","wrapperHeightTall","wrapperShouldPageScrollAboveSmall","container","propTypes","PropTypes","node","func","isRequired","bool","oneOf","defaultProps","modalHeaderPropTypes","modalTitlePropTypes","string","modalDescriptionPropTypes","modalContentPropTypes","modalContentFullBleedPropTypes","className","style","shape","modalContentFullBleedDefaultProps","modalFooterPropTypes","isSticky","modalFooterDefaultProps","modalDefaultPropTypes","shouldHideCloseButton","modalDefaultDefaultProps","ModalDefaultHeader","modalHeader","ModalDefaultTitle","modalTitle","ModalDefaultDescription","modalDescription","ModalDefaultContent","modalContent","ModalDefaultContentFullBleed","modalContentFullBleed","ModalDefaultFooter","props","state","isClient","setState","modalFooterFluid","ReactDOM","createPortal","current","Component","ModalDefault","createRef","hasStickyFooter","bind","activeTimeout","newVal","contents","contentsPadding","contentsPaddingNotSticky","closeButton","closeButtonNotSticky","closeButtonIcon"],"mappings":"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"}